<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.UserWithdrawDao">

    <resultMap type="com.platform.entity.UserWithdraw" id="userWithdrawMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="mobile" column="mobile"/>
        <result property="weixinOpenid" column="weixin_openid"/>
        <result property="withdrawMoney" column="withdraw_money"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="status" column="status"/>
    </resultMap>

    <select id="queryObject" resultType="com.platform.entity.UserWithdraw">
		SELECT
            a.id,
            a.user_id,
            a.user_name,
            a.nick_name,
            a.mobile,
            a.weixin_openid,
            a.withdraw_money,
            create_time,
            update_time,
            a.`status`
        FROM
        nideshop_user_withdraw AS a

		where id = #{id}
	</select>

    <select id="queryList" resultType="com.platform.entity.UserWithdraw">
        SELECT
            a.id,
            a.user_id,
            a.user_name,
            a.nick_name,
            a.mobile,
            a.weixin_openid,
            a.withdraw_money,
            create_time,
            update_time,
            a.`status`
        FROM
        nideshop_user_withdraw AS a
        WHERE 1=1
        <if test="userName != null and userName.trim() != ''">
            and user_name like concat('%',#{userName},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from nideshop_user_withdraw
        WHERE 1=1
        <if test="userName != null and userName.trim() != ''">
            and user_name like concat('%',#{userName},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.platform.entity.UserWithdraw" useGeneratedKeys="true" keyProperty="id">
		insert into nideshop_user_withdraw(
            user_id,
            user_name,
            nick_name,
            mobile,
            weixin_openid,
            withdraw_money,
            create_time,
            update_time,
            `status`
			)
		values(
			#{userId},
			#{userName},
			#{nickName},
			#{mobile},
			#{weixinOpenid},
			#{withdrawMoney},
			#{createTime},
			#{updateTime},
			#{status}
			)
	</insert>

    <update id="update" parameterType="com.platform.entity.UserWithdraw">
        update nideshop_user_withdraw
        <set>
            <if test="userId != null">`user_id` = #{userId},</if>
            <if test="userName != null">`user_name` = #{userName},</if>
            <if test="nickName != null">`nick_name` = #{nickName},</if>
            <if test="mobile != null">`mobile` = #{mobile},</if>
            <if test="weixinOpenid != null">`weixin_openid` = #{weixinOpenid},</if>
            <if test="withdrawMoney != null">`withdraw_money` = #{withdrawMoney},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="updateTime != null">`update_time` = #{updateTime},</if>
            <if test="status != null">`status` = #{status}</if>

        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from nideshop_user_withdraw where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from nideshop_user_withdraw where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>